/* !
 * vconsole-loguploader v1.0.0 (https://github.com/WechatFE/vConsole-loguploader)
 * Copyright 2020, erichua
 * MIT license
 */
!(function (e, t) {
  'object' === typeof exports && 'object' === typeof module ?
    (module.exports = t()) :
    'function' === typeof define && define.amd ?
      define([], t) :
      'object' === typeof exports ?
        (exports['vConsole-loguploader'] = t()) :
        (e['vConsole-loguploader'] = t());
})(this, function () {
  return (function (e) {
    function t(n) {
      if (o[n]) {
        return o[n].exports;
      }
      let r = (o[n] = {
        exports: {},
        id: n,
        loaded: !1,
      });
      return e[n].call(r.exports, r, r.exports, t), (r.loaded = !0), r.exports;
    }
    var o = {};
    return (t.m = e), (t.c = o), (t.p = ''), t(0);
  })([
    function (e, t, o) {
      'use strict';

      function n(e) {
        return e && e.__esModule ?
          e :
          {
            default: e,
          };
      }

      function r(e, t) {
        if (!(e instanceof t)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function i(e, t) {
        if (!e) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return !t || ('object' !== typeof t && 'function' !== typeof t) ? e : t;
      }

      function a(e, t) {
        if ('function' !== typeof t && null !== t) {
          throw new TypeError(`Super expression must either be null or a function, not ${typeof t}`);
        }
        (e.prototype = Object.create(t && t.prototype, {
          constructor: {
            value: e,
            enumerable: !1,
            writable: !0,
            configurable: !0,
          },
        })),
        t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t));
      }
      let l = (function () {
        function e(e, t) {
          for (let o = 0; o < t.length; o++) {
            let n = t[o];
            (n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, n.key, n);
          }
        }
        return function (t, o, n) {
          return o && e(t.prototype, o), n && e(t, n), t;
        };
      })();
      o(1);
      let u = o(5);
      let s = n(u);
      let c = window.vConsole.$;
      let f =
        (window.vConsole.tool,
        (function (e) {
          function t() {
            let e;
            r(this, t);
            for (var o = arguments.length, n = Array(o), a = 0; a < o; a++) {
              n[a] = arguments[a];
            }
            let l = i(this, (e = t.__proto__ || Object.getPrototypeOf(t)).call.apply(e, [this].concat(n)));
            return (l.$tabbox = c.render(s.default, {})), l;
          }
          return (
            a(t, e),
            l(t, [
              {
                key: 'onRenderTab',
                value(e) {
                  e(this.$tabbox);
                },
              },
              {
                key: 'config',
                value() {
                  let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                  e.postURL || console.warn('Please set server url'), (this.logPostURL = e.postURL);
                },
              },
              {
                key: 'onInit',
                value() {},
              },
              {
                key: 'onAddTool',
                value(e) {
                  let t = this;
                  let o = [
                    {
                      name: 'UploadLog',
                      global: !1,
                      onClick(e) {
                        t.uploadLog();
                      },
                    },
                    {
                      name: 'UploadLocalStorage',
                      global: !1,
                      onClick(e) {
                        t.uploadLocalStorage();
                      },
                    },
                  ];
                  e(o);
                },
              },
              {
                key: 'uploadLog',
                value() {
                  let e = this.getLogList();
                  this.upload(e);
                },
              },
              {
                key: 'uploadLocalStorage',
                value() {
                  let e = this.getLocalStorageList();
                  this.upload(e);
                },
              },
              {
                key: 'getLogList',
                value() {
                  let e = c.one('.vc-logbox');
                  let t = c.all('.vc-item-content', e);
                  let o = [];
                  let n = !0;
                  let r = !1;
                  let i = void 0;
                  try {
                    for (var a, l = t[Symbol.iterator](); !(n = (a = l.next()).done); n = !0) {
                      let u = a.value;
                      o.push(u.innerHTML);
                    }
                  } catch (s) {
                    (r = !0), (i = s);
                  } finally {
                    try {
                      !n && l.return && l.return();
                    } finally {
                      if (r) {
                        throw i;
                      }
                    }
                  }
                  return o;
                },
              },
              {
                key: 'upload',
                value(e) {
                  let t = this;
                  let o = {
                    deviceInfo: {},
                    logList: e ? e : {},
                  };
                  let n = Zepto;
                  Zepto ? (n = Zepto) : jQuery && (n = jQuery),
                  n.ajax({
                    type: 'POST',
                    url: this.logPostURL,
                    data: JSON.stringify(o),
                    contentType: 'application/json',
                    success(e) {
                      let o = c.one('.vc-log-id');
                      o.innerHTML = c.render(
                        '<div>Your log is uploaded</div><div>Log URL: <span ><a style="user-select: text;-webkit-user-select: text;">{{logURL}}</a></span></div>',
                        {
                          logURL: `${t.logPostURL.replace('postLog', '')}uploaded/${e}`,
                        },
                        !0
                      );
                    },
                    error(e) {
                      let t = c.one('.vc-log-id');
                      t.innerHTML = c.render('<div>Log upload failed</div>', {});
                    },
                  });
                },
              },
              {
                key: 'onReady',
                value() {},
              },
              {
                key: 'getCookieList',
                value() {
                  if (!document.cookie) {
                    return [];
                  }
                  for (var e = [], t = document.cookie.split(';'), o = 0; o < t.length; o++) {
                    let n = t[o].split('=');
                    let r = n[0].replace(/^ /, '');
                    let i = n[1];
                    e.push({
                      name: decodeURIComponent(r),
                      value: decodeURIComponent(i),
                    });
                  }
                  return e;
                },
              },
              {
                key: 'getLocalStorageList',
                value() {
                  if (!window.localStorage) {
                    return [];
                  }
                  for (var e = [], t = 0; t < localStorage.length; t++) {
                    let o = localStorage.key(t);
                    let n = localStorage.getItem(o);
                    e.push(
                      JSON.stringify({
                        name: o,
                        value: n,
                      })
                    );
                  }
                  return e;
                },
              },
            ]),
            t
          );
        })(VConsole.VConsolePlugin));
      let p = new f('uploader', 'LogUploader');
      window.vConsole.addPlugin(p);
    },
    function (e, t, o) {
      let n = o(2);
      'string' === typeof n && (n = [[e.id, n, '']]);
      o(4)(n, {});
      n.locals && (e.exports = n.locals);
    },
    function (e, t, o) {
      (t = e.exports = o(3)()),
      t.push([
        e.id,
        '.vc-sub-tabbar{background-color:#fbf9fe;display:flex;flex-direction:row;flex-wrap:wrap}.vc-sub-tabbar .vc-subtab{flex:1;line-height:30px;padding:0 15px;border-right:1px solid #d9d9d9;border-bottom:1px solid #d9d9d9;text-decoration:none;text-align:center;color:#000;-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none}.vc-sub-tabbar .vc-subtab:active{background-color:rgba(0,0,0,.15)}.vc-sub-tabbar .vc-subtab.vc-actived{background-color:#fff}',
        '',
      ]);
    },
    function (e, t) {
      'use strict';
      e.exports = function () {
        let e = [];
        return (
          (e.toString = function () {
            for (var e = [], t = 0; t < this.length; t++) {
              let o = this[t];
              o[2] ? e.push(`@media ${o[2]}{${o[1]}}`) : e.push(o[1]);
            }
            return e.join('');
          }),
          (e.i = function (t, o) {
            'string' === typeof t && (t = [[null, t, '']]);
            for (var n = {}, r = 0; r < this.length; r++) {
              let i = this[r][0];
              'number' === typeof i && (n[i] = !0);
            }
            for (r = 0; r < t.length; r++) {
              let a = t[r];
              ('number' === typeof a[0] && n[a[0]]) ||
                (o && !a[2] ? (a[2] = o) : o && (a[2] = `(${a[2]}) and (${o})`), e.push(a));
            }
          }),
          e
        );
      };
    },
    function (e, t, o) {
      function n(e, t) {
        for (let o = 0; o < e.length; o++) {
          let n = e[o];
          let r = d[n.id];
          if (r) {
            r.refs++;
            for (var i = 0; i < r.parts.length; i++) {
              r.parts[i](n.parts[i]);
            }
            for (; i < n.parts.length; i++) {
              r.parts.push(s(n.parts[i], t));
            }
          } else {
            for (var a = [], i = 0; i < n.parts.length; i++) {
              a.push(s(n.parts[i], t));
            }
            d[n.id] = {
              id: n.id,
              refs: 1,
              parts: a,
            };
          }
        }
      }

      function r(e) {
        for (var t = [], o = {}, n = 0; n < e.length; n++) {
          let r = e[n];
          let i = r[0];
          let a = r[1];
          let l = r[2];
          let u = r[3];
          let s = {
            css: a,
            media: l,
            sourceMap: u,
          };
          o[i] ?
            o[i].parts.push(s) :
            t.push(
              (o[i] = {
                id: i,
                parts: [s],
              })
            );
        }
        return t;
      }

      function i(e, t) {
        let o = h();
        let n = m[m.length - 1];
        if ('top' === e.insertAt) {
          n ? (n.nextSibling ? o.insertBefore(t, n.nextSibling) : o.appendChild(t)) : o.insertBefore(t, o.firstChild),
          m.push(t);
        } else {
          if ('bottom' !== e.insertAt) {
            throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
          }
          o.appendChild(t);
        }
      }

      function a(e) {
        e.parentNode.removeChild(e);
        let t = m.indexOf(e);
        t >= 0 && m.splice(t, 1);
      }

      function l(e) {
        let t = document.createElement('style');
        return (t.type = 'text/css'), i(e, t), t;
      }

      function u(e) {
        let t = document.createElement('link');
        return (t.rel = 'stylesheet'), i(e, t), t;
      }

      function s(e, t) {
        let o, n, r;
        if (t.singleton) {
          let i = y++;
          (o = b || (b = l(t))), (n = c.bind(null, o, i, !1)), (r = c.bind(null, o, i, !0));
        } else {
          e.sourceMap &&
          'function' === typeof URL &&
          'function' === typeof URL.createObjectURL &&
          'function' === typeof URL.revokeObjectURL &&
          'function' === typeof Blob &&
          'function' === typeof btoa ?
            ((o = u(t)),
            (n = p.bind(null, o)),
            (r = function () {
              a(o), o.href && URL.revokeObjectURL(o.href);
            })) :
            ((o = l(t)),
            (n = f.bind(null, o)),
            (r = function () {
              a(o);
            }));
        }
        return (
          n(e),
          function (t) {
            if (t) {
              if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap) {
                return;
              }
              n((e = t));
            } else {
              r();
            }
          }
        );
      }

      function c(e, t, o, n) {
        let r = o ? '' : n.css;
        if (e.styleSheet) {
          e.styleSheet.cssText = L(t, r);
        } else {
          let i = document.createTextNode(r);
          let a = e.childNodes;
          a[t] && e.removeChild(a[t]), a.length ? e.insertBefore(i, a[t]) : e.appendChild(i);
        }
      }

      function f(e, t) {
        let o = t.css;
        let n = t.media;
        if ((n && e.setAttribute('media', n), e.styleSheet)) {
          e.styleSheet.cssText = o;
        } else {
          for (; e.firstChild;) {
            e.removeChild(e.firstChild);
          }
          e.appendChild(document.createTextNode(o));
        }
      }

      function p(e, t) {
        let o = t.css;
        let n = t.sourceMap;
        n &&
          (o += `\n/*# sourceMappingURL=data:application/json;base64,${btoa(
            unescape(encodeURIComponent(JSON.stringify(n)))
          )} */`);
        let r = new Blob([o], {
          type: 'text/css',
        });
        let i = e.href;
        (e.href = URL.createObjectURL(r)), i && URL.revokeObjectURL(i);
      }
      var d = {};
      let v = function (e) {
        let t;
        return function () {
          return 'undefined' === typeof t && (t = e.apply(this, arguments)), t;
        };
      };
      let g = v(function () {
        return /msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase());
      });
      var h = v(function () {
        return document.head || document.getElementsByTagName('head')[0];
      });
      var b = null;
      var y = 0;
      var m = [];
      e.exports = function (e, t) {
        (t = t || {}),
        'undefined' === typeof t.singleton && (t.singleton = g()),
        'undefined' === typeof t.insertAt && (t.insertAt = 'bottom');
        let o = r(e);
        return (
          n(o, t),
          function (e) {
            for (var i = [], a = 0; a < o.length; a++) {
              let l = o[a];
              var u = d[l.id];
              u.refs--, i.push(u);
            }
            if (e) {
              let s = r(e);
              n(s, t);
            }
            for (var a = 0; a < i.length; a++) {
              var u = i[a];
              if (0 === u.refs) {
                for (let c = 0; c < u.parts.length; c++) {
                  u.parts[c]();
                }
                delete d[u.id];
              }
            }
          }
        );
      };
      var L = (function () {
        let e = [];
        return function (t, o) {
          return (e[t] = o), e.filter(Boolean).join('\n');
        };
      })();
    },
    function (e, t) {
      e.exports = ' <div> <div class=vc-log-id></div> </div> ';
    },
  ]);
});
